set nocompatible 

" Flags set
set autoindent " Match indents on new lines.
set colorcolumn=80,100
set expandtab " use spaces instead of tabs.
set gdefault " use the `g` flag by default.
set history=1000
set hlsearch " highlight search
set ignorecase " case insensitive search
set incsearch
set lcs+=space:Â·
set list
set number
set relativenumber
set scrolloff=5
set shiftround " tab / shifting moves to closest tabstop.
set shiftwidth=4
set showmatch
set smartcase
set smartindent " Intellegently dedent / indent new lines based on rules.
set smarttab " let's tab key insert 'tab stops', and bksp deletes tabs.
set softtabstop=4
set tabstop=4
set termguicolors
set virtualedit=onemore " Allow moving one character past the end of the line.
set wildmode=list:longest,list:full
set wrap

" Keymappings

" Don't use Ex mode, use Q for formatting.
map Q gq

noremap <Space> <Nop>
nnoremap <CR> i
let mapleader=" "

" nnoremap q q
nnoremap w <C-w><C-w>
nnoremap e <Nop>
nnoremap r R
noremap t <Nop>
" inoremap <C-y> <C-o>:action copilot.requestCompletion<CR>
noremap u b
inoremap <C-u> <C-o>b
noremap U B
noremap i e
inoremap <C-i> <C-o>e
noremap I E
noremap o w
noremap O W
noremap p %
noremap P J

inoremap <Tab> <C-v><Tab>
nnoremap <Tab> >>
vnoremap <Tab> >gv
nnoremap <S-Tab> <<
vnoremap <S-Tab> <gv
nnoremap <leader><Tab> ==
vnoremap <leader><Tab> =gv
" reserved for expand/shrink selection
noremap a <Nop>
noremap A <Nop>
nnoremap s v
nnoremap S V
noremap d "_d
inoremap <C-d> <C-o>"_x
noremap D "_x
inoremap <C-D> <C-o>"_X
noremap <leader>d "_dd
" noremap f f
" noremap F F
" noremap g g
inoremap <C-h> <Left>
noremap <leader>h ^
inoremap <C-j> <Down>
noremap <leader>j }
inoremap <C-k> <Up>
noremap J <C-d>
noremap <leader>k {
inoremap <C-l> <Right>
noremap K <C-u>
noremap <leader>l $
" noremap ; ;
" noremap : :
" reserved for commenting
noremap ' <Nop>
nnoremap <leader><CR> o
nnoremap <S-CR> a

noremap z u
noremap Z U
noremap <leader>z <C-r>
noremap x d
noremap X D
noremap <leader>x "+d
noremap c y
noremap <leader>c "+y
noremap v p
noremap V P
noremap <leader>v "+p
noremap <leader>V "+P
cnoremap <c-v> <c-r>0
" reserved for buffer actions
noremap b :b <C-d> 
noremap B <Nop>
" noremap n n
noremap m '
noremap <leader>m m
" reserved for show parameters
noremap , <Nop>
" noremap . .
" noremap / /
" noremap ? ?

noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" Vim terminal color support
if !has('nvim')

    " Mouse support
    set mouse=a
    set ttymouse=sgr
    set balloonevalterm
    " Styled and colored underline support
    let &t_AU = "\e[58:5:%dm"
    let &t_8u = "\e[58:2:%lu:%lu:%lum"
    let &t_Us = "\e[4:2m"
    let &t_Cs = "\e[4:3m"
    let &t_ds = "\e[4:4m"
    let &t_Ds = "\e[4:5m"
    let &t_Ce = "\e[4:0m"
    " Strikethrough
    let &t_Ts = "\e[9m"
    let &t_Te = "\e[29m"
    " Truecolor support
    let &t_8f = "\e[38:2:%lu:%lu:%lum"
    let &t_8b = "\e[48:2:%lu:%lu:%lum"
    let &t_RF = "\e]10;?\e\\"
    let &t_RB = "\e]11;?\e\\"
    " Bracketed paste
    let &t_BE = "\e[?2004h"
    let &t_BD = "\e[?2004l"
    let &t_PS = "\e[200~"
    let &t_PE = "\e[201~"
    " Cursor control
    let &t_RC = "\e[?12$p"
    let &t_SH = "\e[%d q"
    let &t_RS = "\eP$q q\e\\"
    let &t_SI = "\e[5 q"
    let &t_SR = "\e[3 q"
    let &t_EI = "\e[1 q"
    let &t_VS = "\e[?12l"
    " Focus tracking
    let &t_fe = "\e[?1004h"
    let &t_fd = "\e[?1004l"
    execute "set <FocusGained>=\<Esc>[I"
    execute "set <FocusLost>=\<Esc>[O"
    " Window title
    let &t_ST = "\e[22;2t"
    let &t_RT = "\e[23;2t"

    " vim hardcodes background color erase even if the terminfo file does
    " not contain bce. This causes incorrect background rendering when
    " using a color theme with a background color in terminals such as
    " kitty that do not support background color erase.
    let &t_ut=''
endif
