#!/bin/bash

function venv () {
    source "$1/bin/activate"
}

function gic () {
    git commit -m "$1" 
}

function tma () {
    tmux a -t "$1"
}

function dex () {
    docker exec -ti "$1" bash
}

alias ll='ls -lAh'
alias sudo='sudo '
alias gis='git status'
alias gip='git pull'
alias gid='git diff'
alias giau='git add -u'
alias tmls='tmux ls'
alias tmcp='tmux show-buffer | xclip -selection clipboard'
alias dps='docker ps'
alias python='python3'
# alias nvim='venv ~/.venvs/nvim && nvim'
alias rsyncd='rsync -auh --info=progress2'
alias copy='xclip -selection clipboard'
alias pipr='pip install -r requirements.txt'


POWERLINE_ARROW=$'\uE0B0'
POWERLINE_BREAK=$'\uE0BC'
POWERLINE_BREAK_REVERSE=$'\uE0BA'
PIPE_RIGHT_DOWN=$'\u250C'
PIPE_UP_RIGHT=$'\u2514'
PIPE_RIGHT_LEFT=$'\u2500'
PROMPT_UI_COLOR="7" # white
PROMPT_TIME_COLOR="2" # green
PROMPT_USER_COLOR="4" # blue
PROMPT_HOME_COLOR="3" # yellow
PROMPT_REMOTE_COLOR="6" # cyan
PROMPT_GIT_COLOR="3" # yellow
PROMPT_VENV_COLOR="6" # cyan
PROMPT_DIR_COLOR="1" # red
PROMPT_IS_HOME=true

ansi_escape() {
    local IFS=';'
    local codes="$*"
    echo -e "\033[${codes}m"
}

ansi_fg() {
    local code=$1
    code=$((code + 30))
    echo $(ansi_escape $code) 
}

ansi_bg() {
    local code=$1
    code=$((code + 40))
    echo $(ansi_escape $code) 
}

ansi_fg_bg() {
    local fg=$1
    fg=$((fg + 30))
    local bg=$2
    bg=$((bg + 40))
    echo $(ansi_escape 0 $fg $bg)
}

COLOR_RESET=$(ansi_escape 0)
PROMPT_START_UP=$"$(ansi_fg 7)${PIPE_RIGHT_DOWN}$(ansi_bg 0)"
PROMPT_START_DOWN=$"${PIPE_UP_RIGHT}>"
SEPARATOR="$(ansi_fg_bg 0 9)${POWERLINE_BREAK}$(ansi_fg_bg 0 9)${POWERLINE_BREAK_REVERSE}$(ansi_bg 0)"

set_bash_prompt() {
    git_branch=$(git branch --show-current 2>/dev/null)
    PS1="${COLOR_RESET}${PROMPT_START_UP}"
    PS1="${PS1}$(ansi_fg ${PROMPT_TIME_COLOR}) \A "
    PS1="${PS1}${SEPARATOR}"
    PS1="${PS1}$(ansi_fg ${PROMPT_USER_COLOR}) \u"
    if [[ $PROMPT_IS_HOME = true ]]
    then
        PS1="${PS1}$(ansi_fg ${PROMPT_HOME_COLOR})@\h "
    else
        PS1="${PS1}$(ansi_fg ${PROMPT_REMOTE_COLOR})@\h "
    fi
    # PS1="${PS1}$(segment_separator ${previous_color} ${PROMPT_HOST_COLOR})"
    # PS1="${PS1}$(ansi_fg_bg 9 ${PROMPT_HOST_COLOR}) \h "
    # previous_color=${PROMPT_HOST_COLOR}
    if [[ $VIRTUAL_ENV != '' ]]
    then
        venv_name=$(basename $VIRTUAL_ENV)
        PS1="${PS1}${SEPARATOR}"
        PS1="${PS1}$(ansi_fg ${PROMPT_VENV_COLOR}) venv=${venv_name} "
    fi
    PS1="${PS1}$(ansi_fg_bg 0 9)${POWERLINE_ARROW} "
    PS1="${PS1}$(ansi_fg ${PROMPT_DIR_COLOR})\w"
    if [[ ${git_branch} != '' ]]
    then
        PS1="${PS1}$(ansi_fg ${PROMPT_GIT_COLOR}) (${git_branch}) "
    fi
    PS1="${PS1}${COLOR_RESET}\n${PROMPT_START_DOWN} "
    PS2="${PIPE_RIGHT_LEFT}> "
}

PROMPT_COMMAND=set_bash_prompt
