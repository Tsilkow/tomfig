(defcfg override-release-on-activation no)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

(deffakekeys
  to-base (layer-switch qwerty-base)
  to-nomods (layer-switch qwerty-nomods)
)

(deftemplate charmod (char mod keys)
  (switch 
    ((key-timing 3 less-than 250)) $char break
    () (tap-hold-release-keys 0 200 $char $mod $keys) break
  )
)

(defchords uio-backspace-delete 40
  (u    ) u
  (  i  ) i
  (    o) o
  (u i  ) bspc
  (  i o) del
)

(defchords we-tab 40
  (w  ) w
  (  e) e
  (w e) tab
)

(defchords m,./-media 40
  (m      ) m
  (  ,    ) ,
  (    .  ) .
  (      /) /
  (m ,    ) voldwn
  (  , .  ) pp
  (    . /) volu
  (m , .  ) prev
  (  , . /) next
)

(defchords layer-switching 40
  (f1      ) f1
  (   f2   ) f2
  (      f3) f3
  (f1 f2   ) (layer-switch qwerty-base)
  (   f2 f3) (layer-switch qwerty-nomods)
)
(defalias
  tap (multi
    (layer-switch qwerty-nomods)
    (on-idle-fakekey to-base tap 20)
  )
  a (tap-hold-release-keys 0 300 (multi a @tap) lmet $lefthand-nomods-keys)
  s (tap-hold-release-keys 0 200 (multi s @tap) ralt $lefthand-nomods-keys)
  d (tap-hold-release-keys 0 200 (multi d @tap) lctl $lefthand-nomods-keys)
  f (tap-hold-release-keys 0 200 (multi f @tap) lsft $lefthand-nomods-keys)
  j (tap-hold-release-keys 0 200 (multi j @tap) rsft $righthand-nomods-keys)
  k (tap-hold-release-keys 0 200 (multi k @tap) rctl $righthand-nomods-keys)
  l (tap-hold-release-keys 0 200 (multi l @tap) ralt $righthand-nomods-keys)
  ; (tap-hold-release-keys 0 300 (multi ; @tap) rmet $righthand-nomods-keys)
  u (chord uio-backspace-delete u)
  i (chord uio-backspace-delete i)
  o (chord uio-backspace-delete o)
  w (chord we-tab w)
  e (chord we-tab e)
  m (chord m,./-media m)
  , (chord m,./-media ,)
  . (chord m,./-media .)
  / (chord m,./-media /)
  f1 (chord layer-switching f1)
  f2 (chord layer-switching f2)
  f3 (chord layer-switching f3)
  base (layer-switch qwerty-base)
  nomods (layer-switch qwerty-nomods)
)

(defoverrides
  (;) (lsft ;)
  (lsft ;) (;)
  (rsft ;) (;)
  ;;(lsft ,) (lsft 9)
  ;;(rsft ,) (rsft 9)
  ;;(lsft 9) (lsft ,)
  ;;(rsft 9) (rsft ,)
  ;;(lsft .) (lsft 0)
  ;;(rsft .) (rsft 0)
  ;;(lsft 0) (lsft .)
  ;;(rsft 0) (rsft .)
  (ralt r) (lsft 8)
  (ralt d) (lsft -)
  (ralt f) (-)
  (ralt g) (=)
  (ralt h) (lsft `)
  (ralt u) (lsft [)
  (ralt i) (lsft ])
  (ralt j) (lsft 9)
  (ralt k) (lsft 0)
  (ralt ;) (`)
  (ralt m) ([)
  (ralt ,) (])
  (ralt v) (+)
  (ralt /) (\)
  (ralt spc) (spc)
  (lmet h) (lft)
  (lmet j) (down)
  (lmet k) (up)
  (lmet l) (rght)
  ;;(lalt a) (ralt a)
  ;;(lalt c) (ralt c)
  ;;(lalt e) (ralt e)
  ;;(lalt l) (ralt l)
  ;;(lalt n) (ralt n)
  ;;(lalt o) (ralt o)
  ;;(lalt s) (ralt s)
  ;;(lalt x) (ralt x)
  ;;(lalt z) (ralt z)
)

(defvar
  lefthand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  righthand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
  lefthand-nomods-keys (
    q w e r t
            g
    z x c v b
  )
  righthand-nomods-keys (
    y u i o p
            ;
    n m , . /
  )
)

(deflayer qwerty-base
  caps @f1 @f2  @f3   _    _    _    _    _    _    _    _    _  
  _    _    _    _    _    _    _    _    _    _    _    _    _    _   
  _    _   @w   @e    _    _    _   @u   @i   @o    _    _    _    _
  esc @a   @s   @d   @f    _    _   @j   @k   @l   @;    _    _  
  _    _    _    _    _    _    _   @m   @,   @.   @/    rsft
  lalt lmet lctl           spc            ralt rmet lalt
)

(deflayer qwerty-nomods
  _   @f1  @f2  @f3   _    _    _    _    _    _    _    _    _  
  _    _    _    _    _    _    _    _    _    _    _    _    _    _   
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  esc  _    _    _    _    _    _    _    _    _    _    _    _  
  _    _    _    _    _    _    _    _    _    _    _    rsft
  lalt lmet lctl           spc            ralt rmet lalt
)

;;(deflayer symbols (illustratively)
;;  _    _    _    _    _    _    _    _    _    _    _    _    _    _
;;  _    _    _    _    _    _    _    _    _    _    _    _    _    _
;;  _    π    œ    ę    *    ß    ←    {    }    ó    þ    _    _    _
;;  _    ą    ś    =    -    _    ~    (    )    ł    `    _    _
;;  _    ż    ź    ć    +    ”    ń    [    ]    ≥    \    _
;;  _    _    _              _              _    _    _
;;)
